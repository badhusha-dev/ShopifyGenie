You are a senior full-stack engineer. Extend my ShopifyApp 
(React 18 + TypeScript + Bootstrap 5.3 + Express.js + PostgreSQL + JWT + RBAC) 
with more **Advanced Accounts features** on top of the existing Chart of Accounts and General Ledger.

Features to Implement

1. Journal Entries
   - Manual Journal Entry modal:
     * Date, Description, Debit Account, Credit Account, Amount.
     * Validation (Debit = Credit).
   - Save to `journal_entries` table.
   - Table view of manual + auto journals with filters.

2. Accounts Receivable (AR)
   - Customer invoices linked to Shopify orders.
   - Status: Pending, Paid, Partial.
   - Aging Report (0–30 / 31–60 / 61–90 days).
   - Bootstrap DataTable with filters & export.

3. Accounts Payable (AP)
   - Vendor bills linked to Purchase Orders.
   - Track due date, status (Unpaid, Paid, Overdue).
   - Vendor statement view (all outstanding bills).

4. Wallets & Credits
   - Customer wallets for refunds & loyalty redemptions.
   - Vendor wallets for payouts.
   - Wallet adjustment modal (credit/debit).

5. Financial Reports
   - Profit & Loss (Revenue – COGS – Expenses by period).
   - Balance Sheet (Assets, Liabilities, Equity).
   - Cash Flow Statement (Operating, Investing, Financing).
   - Export to PDF/Excel.

Backend
- Extend PostgreSQL schema with `invoices`, `bills`, `wallets`, `reports`.
- Add Express routes under `/api/accounts/*`.
- Middleware: JWT + RBAC.
- Journal posting logic auto-updates GL.

Frontend
- New Accounts section in sidebar: Journals | AR | AP | Wallets | Reports.
- Bootstrap DataTable + AnimatedModal for UI.
- Reuse KPI Cards and Charts for report summaries.
- Shopify-inspired Bootstrap 5 styling + animations.

RBAC
- SuperAdmin/Admin: Full CRUD.
- Staff: View-only.
- Customers: No access.

Deliverables
- Extended backend API routes + DB schema.
- Frontend pages for Journals, AR, AP, Wallets, Reports.
- Consistent design with other modules (Dashboard, Inventory, Finance).
